{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red191\green0\blue0;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 (\
\
\cf3 SynthDef\cf2 (\cf4 "mh2"\cf2 ,\{ \cf3 arg\cf2  pch1 = 0.3,pch2=0.5,frq = 1.0;\
\
	\cf3 var\cf2  ctrigs = \
	\{\
		\cf3 TDuty\cf2 .ar\
		(\
			\cf3 Dxrand\cf2 (\
					(\
						(1/8!8) ++ (1/4!8) ++ [\cf3 Dseq\cf2 ([1/16, 1/16],\cf3 Drand\cf2 ([1, 2], \cf3 inf\cf2 ))] \
							\cf5 //++[Dseq([1/32, 1/32, 1/32, 1/32],Drand([2, 4], inf))]\cf2 \
					) * 1.25, \cf3 inf\cf2 \
				), \cf5 //see above logic\cf2 \
			0, \
			\cf3 Dwhite\cf2 (0.5, 1, \cf3 inf\cf2 ) \cf5 //trigger values are between 0.5, 1\cf2 \
		)\
	\}!2; \
\
	\
	\cf3 var\cf2  clicks = \
		\cf3 BPF\cf2 .ar\
		(\
			\cf3 PinkNoise\cf2 .ar(\cf3 Decay\cf2 .ar(ctrigs, 0.001 * \cf3 LFNoise1\cf2 .ar(4).abs)), \cf5 //decay time is modulated\cf2 \
			1000, \
			0.9, \
			25 * \cf3 LFNoise1\cf2 .ar(18).range(0, 1) \cf5 //extreme amplification of glitches. \cf2 \
		).fold(-1, 1); \cf5 //folding them back into [-1, 1] range (foldback distortion). I think it sounds nice.\cf2 \
	\cf3 var\cf2  snd1 = \
		\cf3 LPF\cf2 .ar\
		(\
			\cf3 SinOsc\cf2 .ar((pch1*127).round.midicps, 0, 0.5) + \cf3 SinOsc\cf2 .ar((pch2*127).round.midicps, 0, 0.6), \
			32.midicps * 2\
		) + \cf3 HPF\cf2 .ar(\cf3 LPF\cf2 .ar(\cf3 WhiteNoise\cf2 .ar(0.008), 12000), 2400);\
\
	\cf3 var\cf2  hiNoise = \
		\cf3 BPF\cf2 .ar\
		(\
			\cf3 WhiteNoise\cf2 .ar(\cf3 Decay2\cf2 .ar(ctrigs * \cf3 LFNoise1\cf2 .ar(8, 0.5, 0.5), 0.02, 0.1) * 0.05), \
			\cf3 TRand\cf2 .ar(12000, 15000, ctrigs), \
			0.9\
		);\
	\
	\
	\cf3 var\cf2  trigMod = \cf3 LFNoise0\cf2 .ar(8).round;\
	\
	\cf3 var\cf2  bass = \
		\cf3 SinOsc\cf2 .ar(0, (\cf3 Sweep\cf2 .ar(ctrigs[0] * trigMod, 2pi * [frq*102.8, 16240]) + (pi/3)).wrap(-pi, pi), [2, 0.05]).mean.tanh * \
		\cf3 EnvGen\cf2 .ar(\cf3 Env\cf2 ([0, 0.5, 0.4, 0], [0, 0.2, 0.01], -5), (ctrigs[0] * trigMod).abs)!2; \
	\
	snd1 = \
		\cf3 Pan2\cf2 .ar\
		(\
			snd1 * \cf3 EnvGen\cf2 .ar(\cf3 Env\cf2 ([0, 1, 0.6, 0], [0.0001, 0.4, 0.01]), ctrigs * \cf3 LFNoise0\cf2 .ar(8)), \
			\cf3 TRand\cf2 .ar(-1, 1, ctrigs)\
		);\
	\
	\cf3 Out\cf2 .ar(0,\cf3 Limiter\cf2 .ar(\cf3 MidEQ\cf2 .ar(clicks + snd1 + hiNoise + bass, 14000, 0.7, 8)));\
\}).send(s);//\cf0 .writeDefFile("synthdefs/");\cf2 \
)\
\
\cf3 Synth\cf2 (\cf6 \\mh2\cf2 )	}