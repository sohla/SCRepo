{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf270
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red191\green0\blue0;\red0\green115\blue0;\red0\green0\blue191;\red19\green42\blue162;\red96\green96\blue96;
}
\deftab560
\pard\pardeftab560\ql\qnatural

\f0\fs18 \cf2 \
(\
	\cf3 Instr\cf2 (\cf4 \\AHPitchShifter\cf2 , \{\cf3 |out=0, channel = 0, grainSize=0.3, pitch = 1.0,pan = 0.0|\cf2 \
		\cf3 var\cf2  signal,source;\
		signal =  \cf3 SoundIn\cf2 .ar(channel);\
		\
		source = \cf3 PitchShift\cf2 .ar(signal, \
					grainSize, 		\
					pitch,\cf5 //MouseY.kr(0.8, 1.2,0.1),\cf2 \
					0.001, 			\cf5 // pitch dispersion\cf2 \
					\cf3 MouseX\cf2 .kr(0.001,0.03,0.2)	\cf5 // time dispersion\cf2 \
			);\
	\
		\
		\cf3 Out\cf2 .ar(out,\cf3 Pan2\cf2 .ar(source,pan,1.0));\
	\});\
\
\
\
\
	\cf3 Instr\cf2 (\cf4 \\FreeVerb2x2\cf2 , \{\cf3 |outbus, mix = 0.25, room = 0.15, damp = 0.5, amp = 1.0|\cf2 \
		\cf3 var\cf2  signal;\
	\
		signal = \cf3 In\cf2 .ar(outbus, 2);\
	\
		\cf3 ReplaceOut\cf2 .ar(outbus,\
			\cf3 FreeVerb2\cf2 .ar( \cf5 // FreeVerb2 - true stereo UGen\cf2 \
				signal[0], \cf5 // Left channel\cf2 \
				signal[1], \cf5 // Right Channel\cf2 \
				mix, room, damp, amp)); \cf5 // same params as FreeVerb 1 chn version\cf2 \
	\
	\});\
\
\
\cf5 //	p = Patch(\\AHPitchShifter).play;\cf2 \
\cf5 //	p.gui;\cf2 \
)\
\
\
g = \cf3 Group\cf2 .new();\
f = \cf3 Group\cf2 .new();\
\
s.queryAllNodes;\
\
\
p = \cf3 Patch\cf2 (\cf4 \\AHPitchShifter\cf2 ).play(group: g);\
q = \cf3 Patch\cf2 (\cf4 \\FreeVerb2x2\cf2 ).play(group: g); \
\cf0 g.set(\cf6 \\room\cf0 , 0.6);\
g.set(\cf6 \\mix\cf0 , 0.6);\
\cf2 q.gui;\
\
\cf0 r = \cf7 Patch\cf0 (\cf6 \\AHPitchShifter\cf0 ).play(group: f);\
\cf2 f.set(\\pitch,0.5);\
\
g.set(\\pan,-1);\
\cf0 f.set(\\pan,1);\
\cf2 \
\cf0 f.set(\\amp,1);\
g.set(\\amp,1);\
\
\
t = \cf7 Patch\cf0 (\cf6 \\AHPitchShifter\cf0 ).play(group: g, bus:\cf8 Bus\cf0 .audio(s,1)); \
\cf2 g.set(\\pitch,0.9);\
	\
\cf0 u = \cf7 Patch\cf0 (\cf6 \\AHPitchShifter\cf0 ).play(group: f, bus:\cf8 Bus\cf0 .audio(s,0)); \
\cf2 f.set(\\pitch,2);\
	\
\cf0 v = \cf7 Patch\cf0 (\cf6 \\AHPitchShifter\cf0 ).play(group: f, bus:\cf8 Bus\cf0 .audio(s,2)); \
f.set(\\pitch,0.25);\
\cf2 \
\
\
a = \cf3 Synth\cf2 (\cf4 \\AHPitchShifter\cf2 , [\cf4 \\out\cf2 , 0, \cf4 \\channel\cf2 , 0, \cf4 \\pitch\cf2 , 0.5, \cf4 \\pan\cf2 , -1],g,addAction:\cf4 \\addToTail\cf2 );\
b = \cf3 Synth\cf2 (\cf4 \\AHPitchShifter\cf2 , [\cf4 \\out\cf2 , 0, \cf4 \\channel\cf2 , 1, \cf4 \\pitch\cf2 , 1.5, \cf4 \\pan\cf2 , 1],f,addAction:\cf4 \\addToTail\cf2 );\
\
a.set(\cf4 \\pan\cf2 , -1);\
\
s.sendMsg(\cf9 "/n_set"\cf2 ,g.nodeID,\cf4 \\pitch\cf2 , 0.5);\
\
\
\
s.queryAllNodes;\
\
c = \cf3 Synth\cf2 (\cf4 \\AHSimpleDelay\cf2 , [\cf4 \\out\cf2 , 0, \cf4 \\channel\cf2 , 0, \cf4 \\delay\cf2 , 0.5],g,addAction:\cf4 \\addToTail\cf2 )\
d = \cf3 Synth\cf2 (\cf4 \\AHSimpleDelay\cf2 , [\cf4 \\out\cf2 , 0, \cf4 \\channel\cf2 , 1, \cf4 \\delay\cf2 , 0.9],f,addAction:\cf4 \\addToTail\cf2 )\
\
\
\
d.set(\cf4 \\delay\cf2 ,1);\
c.free;\
\
\
e = \cf3 Synth\cf2 (\cf4 \\FreeVerb2x2\cf2 , [\cf4 \\out\cf2 , 0, \cf4 \\room\cf2 ,0.9,\cf4 \\mix\cf2 ,0.9],f,addAction:\cf4 \\addToTail\cf2 )\
e.set(\cf4 \\room\cf2 ,0.3,\cf4 \\mix\cf2 ,0.2);\
e.set(\cf4 \\mix\cf2 ,0.7,\cf4 \\room\cf2 ,0.6);\
\
\
\
f = \cf3 Synth\cf2 (\cf4 \\FreeVerb2x2\cf2 , [\cf4 \\out\cf2 , 0, \cf4 \\room\cf2 ,0.4,\cf4 \\mix\cf2 ,0.4],g,addAction:\cf4 \\addToTail\cf2 )\
f.set(\cf4 \\amp\cf2 ,2);\
\
a.free;\
b.free;\
\
d.free;\
\
\
g.free;\
f.free;\
}