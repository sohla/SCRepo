{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue255;\red0\green0\blue191;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 \
(\
\cf2 // harmonic tumbling\cf0 \
play(\{\
	\cf3 var\cf0  f, p, z, trig;\
	f = 40;	\cf2 // fundamental frequency\cf0 \
	p = 10;	\cf2 // number of partials per channel\cf0 \
	z = 0.0;	\cf2 // start of oscil daisy chain\cf0 \
	trig = \cf4 XLine\cf0 .kr([10,10], 0.1, 60);	\cf2 // trigger probability decreases over time\cf0 \
	p.do(\{ \cf3 arg\cf0  i;\
		z = \cf4 FSinOsc\cf0 .ar(\
				f * (i+1), 		\cf2 // freq of partial\cf0 \
				0,\
				\cf4 Decay2\cf0 .kr(\
					\cf4 Dust\cf0 .kr(	\
						trig,		\cf2 // trigger rate\cf0 \
						0.04		\cf2 // trigger amplitude\cf0 \
					), \
					0.005, 	\cf2 // grain attack time\cf0 \
					0.5.rand	\cf2 // grain decay time\cf0 \
				),\
				z\
		)\
	\});\
	[z*2,z*2]\
\}))\
\
\
(\
\cf3 var\cf0  a, c, d, s, z, y;\
\cf2 // reverberated sine percussion\cf0 \
d = 6; \cf2 // number of percolators\cf0 \
c = 5; \cf2 // number of comb delays\cf0 \
a = 4; \cf2 // number of allpass delays\cf0 \
\
play(\{\
		\cf2 // sine percolation sound :\cf0 \
	s = \cf4 Mix\cf0 .ar(\cf4 Array\cf0 .fill(d, \{ \cf4 Resonz\cf0 .ar(\cf4 Dust\cf0 .ar(2/d, 50), 200 + 3000.0.rand, 0.003)\}) );\
	\
		\cf2 // reverb predelay time :\cf0 \
	z = \cf4 DelayN\cf0 .ar(s, 0.048);\
	\
		\cf2 // 7 length modulated comb delays in parallel :\cf0 \
	y = \cf4 Mix\cf0 .ar(\cf4 CombL\cf0 .ar(z, 0.1, \cf4 LFNoise1\cf0 .kr(\cf4 Array\cf0 .fill(c,\{0.1.rand\}), 0.04, 0.05), 15)); \
	\
		\cf2 // chain of 4 allpass delays on each of two channels (8 total) :\cf0 \
	a.do(\{ y = \cf4 AllpassN\cf0 .ar(y, 0.050, [0.050.rand,0.050.rand], 1) \});\
	\
		\cf2 // add original sound to reverb and play it :\cf0 \
	s+(0.2*y)\
\}))\
\
\
\
\
(\
	\cf2 // sample and hold liquidities\cf0 \
	\cf2 // mouse x controls clock rate, mouse y controls center frequency\cf0 \
\{\
	\cf3 var\cf0  clockRate, clockTime, clock, centerFreq, freq, panPos, patch;\
\
	clockRate = \cf4 MouseX\cf0 .kr(1, 200, 1);\
	clockTime = clockRate.reciprocal;\
	clock = \cf4 Impulse\cf0 .kr(clockRate, 0.4);\
\
	centerFreq = \cf4 MouseY\cf0 .kr(100, 8000, 1);\
	freq = \cf4 Latch\cf0 .kr(\cf4 WhiteNoise\cf0 .kr(centerFreq * 0.5, centerFreq), clock);\
	panPos = \cf4 Latch\cf0 .kr(\cf4 WhiteNoise\cf0 .kr, clock);\
	patch = \cf4 CombN\cf0 .ar(\
			\cf4 Pan2\cf0 .ar( \
				\cf4 SinOsc\cf0 .ar(\
					freq, \
					0, \
					\cf4 Decay2\cf0 .kr(clock, 0.1 * clockTime, 0.9 * clockTime)\
				), \
				panPos\
			),\
			0.3, 0.3, 2\
		);\
	\
	[0,0\
	0,0,\
	patch,patch,\
	0,patch]\
	\
	\
	\
\}.play;\
)\
}